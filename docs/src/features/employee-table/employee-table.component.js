"use strict";

angular.module("main").component("employeeTable", {

	bindings: { employeeData: "<" },
	controller: function controller() {

		var self = this;

		self.nameSortToggleAsc = false;
		self.jobTitleSortToggleAsc = false;
		self.tenureSortToggleAsc = false;
		self.genderSortToggleAsc = false;

		self.sortBy = function sortBy(prop, orderToggle) {

			return function sortByName(elementA, elementB) {

				if (elementA[prop] === elementB[prop]) {

					return 0;
				}

				if (elementA[prop] < elementB[prop]) {

					if (orderToggle) {

						return 1;
					}

					return -1;
				}

				if (orderToggle) {

					return -1;
				}

				return 1;
			};
		};

		self.sortByNum = function sortByNum(prop, orderToggle) {

			return function sortByName(elementA, elementB) {

				if (parseInt(elementA[prop], 10) === parseInt(elementB[prop], 10)) {

					return 0;
				}

				if (parseInt(elementA[prop], 10) < parseInt(elementB[prop], 10)) {

					if (orderToggle) {

						return 1;
					}

					return -1;
				}

				if (orderToggle) {

					return -1;
				}

				return 1;
			};
		};

		self.sortedColumn = "";
		self.sortAsc = null;

		self.sortTable = function (heading) {

			switch (heading) {
				case "Name":
					{

						self.employeeData = self.employeeData.sort(self.sortBy("name", self.nameSortToggleAsc));
						self.nameSortToggleAsc = !self.nameSortToggleAsc;
						self.sortedColumn = heading;
						self.sortAsc = self.nameSortToggleAsc;
						break;
					}
				case "Job Title":
					{

						self.employeeData = self.employeeData.sort(self.sortBy("jobTitle", self.jobTitleSortToggleAsc));
						self.jobTitleSortToggleAsc = !self.jobTitleSortToggleAsc;
						self.sortedColumn = heading;
						self.sortAsc = self.jobTitleSortToggleAsc;
						break;
					}
				case "Tenure":
					{

						self.employeeData = self.employeeData.sort(self.sortByNum("tenure", self.tenureSortToggleAsc));
						self.tenureSortToggleAsc = !self.tenureSortToggleAsc;
						self.sortedColumn = heading;
						self.sortAsc = self.tenureSortToggleAsc;
						break;
					}
				case "Gender":
					{

						self.employeeData = self.employeeData.sort(self.sortBy("gender", self.genderSortToggleAsc));
						self.genderSortToggleAsc = !self.genderSortToggleAsc;
						self.sortedColumn = heading;
						self.sortAsc = self.genderSortToggleAsc;
						break;
					}
				default:
					break;
			}
		};
	},

	template: "\n\t\t\t<div class=\"employeeTable\">\n\t\t\t\t<employee-table-headings\n\t\t\t\t\tsorted-column=\"$ctrl.sortedColumn\"\n\t\t\t\t\tsort-order=\"$ctrl.sortAsc\" \n\t\t\t\t\tsort-table=\"$ctrl.sortTable\">\n\t\t\t\t</employee-table-headings>\n\t\t\t\t<div \n\t\t\t\t\tng-repeat=\"employee in $ctrl.employeeData\" \n\t\t\t\t\tng-class-odd=\"'oddRow'\" \n\t\t\t\t\tng-class-even=\"'evenRow'\">\n\t\t\t\t\t<employee-table-row employee-row-data=\"employee\">\n\t\t\t\t\t</employee-table-row>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t"
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
